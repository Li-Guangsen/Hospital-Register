<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgs.backend.dao.PatientDao">
    <resultMap id="PatientResultMap" type="Patient">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="photo" jdbcType="VARCHAR" property="photo" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="sex" jdbcType="VARCHAR" property="sex" />
        <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
        <result column="birth" jdbcType="DATE" property="birth" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="description" jdbcType="VARCHAR" property="description" />
    </resultMap>
    <sql id="selectColumns">
        select  id,
                phone,
                photo,
                name,
                sex,
                id_number,
                birth,
                description
        from t_patient
    </sql>
    <select id="findAll" resultMap="PatientResultMap">
        <include refid="selectColumns"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="sex != null and sex != ''">
                and sex like concat('%', #{sex}, '%')
            </if>
            <if test="idNumber != null and idNumber!= ''">
                and id_number like concat('%', #{idNumber}, '%')
            </if>
            <if test="phone != null and phone!= ''">
                and phone like concat('%', #{phone}, '%')
            </if>
            <if test="birthFrom != null">
                and birth &gt;= #{birthFrom}
            </if>
            <if test="birthTo != null">
                and birth &lt; #{birthTo}
            </if>
        </where>
    </select>
    <select id="selectByPrimaryKey" resultMap="PatientResultMap">
        <include refid="selectColumns"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
        </where>
    </select>
    <select id="selectSubName" resultType="String">

    </select>
    <select id="selectNames" resultType="Patient">
        SELECT id, name FROM t_patient
    </select>
    <select id="count" resultType="int">
        select count(1) from t_patient
    </select>
    <select id="getPasswordById" resultType="Patient">
        select  id,
                name,
                password
        from t_patient
        where id = #{id}
    </select>
    <select id="selectByPhone" resultMap="PatientResultMap">
        select  id,
                phone,
                password,
                photo,
                name,
                sex,
                id_number,
                birth,
                description
        from t_patient
        where phone = #{phone}
    </select>
    <delete id="deleteByPrimaryKey">
        delete from t_patient
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="Patient">
        insert into t_patient( phone,
                              password,
                              photo,
                              name,
                              sex,
                              id_number,
                              birth,
                              description)
        values (#{phone}, #{password}, #{photo}, #{name}, #{sex}, #{idNumber}, #{birth},  #{description});
    </insert>
    <update id="updateByPrimaryKey" parameterType="Subject">
        update t_patient
        set phone=#{phone},
            photo=#{photo},
            name=#{name},
            sex=#{sex},
            id_number=#{idNumber},
            birth=#{birth},
            description=#{description}
        where id = #{id}
    </update>
    <update id="updatePassword" parameterType="Subject">
        update t_patient
        set password=#{password}
        where id = #{id}
    </update>
</mapper>