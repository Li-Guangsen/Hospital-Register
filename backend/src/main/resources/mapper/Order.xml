<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgs.backend.dao.OrderDao">
    <resultMap id="OrderResultMap" type="Order">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pat_id" property="patId"/>
        <result column="sch_id" property="schId"/>
        <result column="status" property="status"/>
        <result column="description" property="description"/>
        <association column="pat_id" property="patient"
                     select="com.lgs.backend.dao.PatientDao.selectByPrimaryKey"/>
        <association column="sch_id" property="schedule"
                     select="com.lgs.backend.dao.ScheduleDao.selectByPrimaryKey"/>
    </resultMap>
    <sql id="selectColumns">
        SELECT id,
               pat_id,
               sch_id,
               status,
               description
        FROM t_order
    </sql>
    <select id="findAll" resultMap="OrderResultMap">
        <include refid="selectColumns"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="patId != null">
                and pat_id = #{patId}
            </if>
            <if test="doctorId != null">
                and sch_id in (select id from t_schedule where doctor_id = #{doctorId})
            </if>
            <if test="workTime != null">
                and sch_id in (select id from t_schedule where work_time = #{workTime})
            </if>
            <if test="patientName != null and patientName != ''">
                and pat_id in (select id from t_patient where name like concat('%', #{patientName}, '%'))
            </if>
            <if test="status != null and status != ''">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="selectByPrimaryKey" resultMap="OrderResultMap">
        <include refid="selectColumns"/>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
        </where>
    </select>
    <select id="count" resultType="int">
        select count(1) from t_order
    </select>
    <select id="findDoctorCount" resultType="OrderSearchCount">
        SELECT
            d.name AS `name`,
            COUNT(o.id) AS value
        FROM
            t_schedule s
                LEFT JOIN
            t_order o
            ON
                s.id = o.sch_id
                LEFT JOIN
            t_doctor d
            ON
                s.doctor_id = d.id
        WHERE
            WEEK(s.work_time) = WEEK(CURDATE())
          AND
            YEAR(s.work_time) = YEAR(CURDATE())
        GROUP BY
            d.name
        HAVING
            COUNT(o.id) > 0;
    </select>
    <select id="findSubjectCount" resultType="OrderSearchCount">
        SELECT
            s.name AS `name`,
            COUNT(o.id) AS value
        FROM
            t_schedule sch
                LEFT JOIN
            t_order o
            ON
                sch.id = o.sch_id
                LEFT JOIN
            t_doctor d
            ON
                sch.doctor_id = d.id
                LEFT JOIN
            t_subject s
            ON
                d.sub_id = s.id
        GROUP BY
            s.name
        HAVING
            COUNT(o.id) > 0;
    </select>
    <select id="findWorkDateCount" resultType="OrderSearchCount">
        SELECT
            DATE(s.work_time) AS `name`,
            COUNT(o.id) AS value
        FROM
            t_schedule s
                LEFT JOIN
            t_order o
            ON
                s.id = o.sch_id
        WHERE
            WEEK(s.work_time) = WEEK(CURDATE())
          AND
            YEAR(s.work_time) = YEAR(CURDATE())
        GROUP BY
            DATE(s.work_time)
        ORDER BY
            DATE(s.work_time);
    </select>
    <delete id="deleteByPrimaryKey">
        delete
        from t_order
        where id = #{id}
    </delete>
    <insert id="insert" parameterType="Order">
        insert into t_order (pat_id, sch_id, status, description)
        values (#{patId}, #{schId}, '代叫号', #{description})
    </insert>
    <update id="updateByPrimaryKey" parameterType="Order">
        update t_order
        set pat_id      = #{patId},
            sch_id      = #{schId},
            status      = #{status},
            description = #{description}
        where id = #{id}
    </update>
    <update id="updateStatus" parameterType="Order">
        update t_order
        set status = #{status}
        where id = #{id}
    </update>
</mapper>